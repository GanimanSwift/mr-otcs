#######################################################################
# Mr. OTCS
#
# https://github.com/TheOpponent/mr-otcs
# https://twitter.com/The_Opponent
#
# This is a copy of config.ini with the default values.
# The default media player arguments are for Raspberry Pi.

[Paths]
# Program paths.
# ffprobe is optional if JSON schedule will not be used.
MEDIA_PLAYER_PATH = /usr/local/bin/ffmpeg
FFPROBE_PATH = /usr/local/bin/ffprobe

# Base path for all video files, including trailing slash.
# This path will also contain play_index.txt and play_history.txt.
BASE_PATH = /media/videos/

# Playlist file. This is a text file with video filenames, including
# subdirectories, in BASE_PATH. Video entries contain one filename
# per line.
# Items starting with comment characters ; # or // and blank lines will
# be skipped.
MEDIA_PLAYLIST = playlist.txt

# Filename for JSON schedule generation.
# Leave blank to disable JSON file output.
SCHEDULE_PATH = schedule.json

[VideoOptions]
# Number of seconds of black video to add between each video.
# This is added to schedule durations for each video.
# Set to 0 if not using ffmpeg.
VIDEO_PADDING = 2

# Arguments to pass to media player. If not using ffmpeg, this should
# include whatever arguments are necessary to immediately exit the
# player after playback is completed.
# MEDIA_PLAYER_BEFORE_ARGUMENTS are passed before the input file.
# MEDIA_PLAYER_AFTER_ARGUMENTS are passed after the input file.
# To save playback position, add {elapsed_time} as a parameter for
# the corresponding media player argument to set start time.
# Add %(VIDEO_PADDING)s for the VIDEO_PADDING setting.
# On non-Raspberry Pi platforms, you will need to change the codec from
# h264_omx to a different one that matches your hardware.
MEDIA_PLAYER_BEFORE_ARGUMENTS = -hide_banner -re -ss {elapsed_time} -i
MEDIA_PLAYER_AFTER_ARGUMENTS = -filter_complex "[0:v]scale=1280x720,fps=30[scaled];[scaled]tpad=stop_duration=%(VIDEO_PADDING)s;apad=pad_dur=%(VIDEO_PADDING)s" -c:v h264_omx -b:v 4000k -acodec aac -b:a 192k -f flv -g 60 rtmp://localhost:1935/live/

[PlayIndex]
# Playback info file configuration.
# To save playback progress, this script saves a file named
# play_index.txt to BASE_PATH.
# The first line contains the index of the playlist starting at 0.
# The second line contains the elapsed time of the current
# video playback in seconds.

# Interval to save playback position in seconds.
# Lower intervals are more precise in resuming when the script is
# unexpectedly terminated, but if BASE_PATH is on flash media like
# USB drive or SD card, higher intervals are recommended to reduce
# disk writes.
TIME_RECORD_INTERVAL = 30

# When resuming video with a saved time in play_index.txt, rewind this
# many seconds. Recommended when streaming to RTMP.
REWIND_LENGTH = 30

[Schedule]
# These options have no effect if SCHEDULE_PATH is disabled.

# Number of upcoming videos to write in JSON schedule.
# Set SCHEDULE_UPCOMING_LENGTH to the total number of minutes of
# video to add to the schedule, and SCHEDULE_MAX_VIDEOS to limit
# the number of videos. Schedule generation is finished when either
# limit is reached.
SCHEDULE_MAX_VIDEOS = 15
SCHEDULE_UPCOMING_LENGTH = 240

# Number and length of previously played videos to write in JSON schedule.
# These are used to go read the playlist in reverse.
# Set SCHEDULE_PREVIOUS_MAX_VIDEOS to 0 to disable.
SCHEDULE_PREVIOUS_MAX_VIDEOS = 3
SCHEDULE_PREVIOUS_LENGTH = 30

# Filename patterns to exclude in schedules. This can be used to exclude
# categories of videos such as station idents or commercials from the
# schedule. Their durations will still be calculated and added to
# the durations of preceding videos to keep the times aligned.
# Set to names separated by commas. Paths beginning with these names
# (case insensitive) will be ignored.
# e.g. Station Breaks/, Commercial will exclude all files in
# the Station Breaks directory and all files and paths in BASE_PATH
# starting with "Commercial". Note that this is not recursive.
# Leave blank to disable.
SCHEDULE_EXCLUDE_FILE_PATTERN =

[Retry]
# Allow retrying file access if next video file cannot be opened.
# This can be useful if BASE_PATH is a network share.
# Set to 0 to not attempt to reopen missing files.
# Set RETRY_ATTEMPTS to -1 to retry infinitely.
# RETRY_PERIOD is the delay in seconds between each retry attempt.
RETRY_ATTEMPTS = 0
RETRY_PERIOD = 5

# Abort script if a file in the playlist cannot be found after retrying
# according to the settings above. This applies only to the encoder;
# the script will not exit during schedule generation if files cannot
# be found, but any such files will not be accounted for in the
# timestamps.
# Set to True to exit with an error if the file cannot be found.
# Set to False to allow script to continue and skip the entry in the
# playlist. This allows the file to be included in future iterations
# of the playlist if it is found later.
EXIT_ON_FILE_NOT_FOUND = False

[Misc]
# Number of videos to keep in history log, saved in play_history.txt in
# BASE_PATH. Set to 0 to disable.
PLAY_HISTORY_LENGTH = 10